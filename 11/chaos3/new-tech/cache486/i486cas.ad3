[Death Virii Crew] Presents
CHAOS A.D. Vmag, Issue 3, Autumn 1996 - Winter 1997


  В общем что я вам скажу: где-то в сентябре я удосужился подумать об одной
ерунде и с тех пор исследования не проводил. потому как на моем cyrix'e
сие не работает. может у вас заработает ;))))
а если заработает я думаю вы найдете этому достойное применение :))

;-----------------------------------------------------------------------
 Запал в голову бред:

 1) Вырубаем прерывания
 2) Вырубаем сквозную запись и несоответствие кеша памяти.
 3) Пишем кусок a1, якобы в нормальную память по адресу x1,на самом деле в кеш.
 4) Вырубаем заполнение кеш-строки при непопадании.
 5) Включаем прерывания.

.model tiny
.code
org 100h
.486p
start:
;-1
; 1) Вырубаем прерывания
cli

wbinvd  ; clear cashe

; set
mov ax,60h
mov es,ax
mov cx,20
cld
xor di,di

;-2
; 2) Вырубаем сквозную запись и несоответствие кеша памяти.
mov eax,cr0
or eax,00100000000000000000000000000000b
mov cr0,eax

;-3
; 3) Пишем кусок a1, якобы в нормальную память по адресу x1,на самом деле в кеш.
mov ax,'**'
rep stosw

;-4
; 4) Вырубаем заполнение кеш-строки при непопадании.
mov eax,cr0
or eax,01000000000000000000000000000000b
mov cr0,eax

;-5
; 5) Включаем прерывания.
sti

; В месте x1 до всего этого уже был кусок a2. После всего этого этот кусок
; недоступен для i486. чтобы доступиться используем DMA на память x2.
; В памяти x2 мы используем кусок a2 и стираем потом, до следующего раза.

;Вопрос: это будет работать ?

int 3

invd

mov eax,cr0
and eax,10011111111111111111111111111111b
mov cr0,eax

invd ; clear cashe

int 3

ret

end start



немного описалова:

	I486


"Кэш-память хранит копии последних считанных команд, операндов и других данных.
Когда процессор запрашивает информацию, уже находящуюся в кэш-памяти 
(попадание), цикл шины не нужен. Когда же процессор запрашивает информацию,
отсутствующую в кэш-памяти (промах), информация считывается в кэш-память за
одну или несколько 16-байтных кэшируемых передач данных, называемых заполнением 
строки кэш-памяти. Если формируется запрос записи в область, находящуюся в 
кэш-памяти, выполняются два действия: обновляется кэш-память и записываемые
данные передаются в основную память. Эти действия называются сквозной записью.




В регистре CR0 имеются следующие флажки управления и состояния:

30 бит
CD (Cashe Disable) - Запрещение кэш-памяти. Этот бит разрешает (0) или
запрещает (1) внутреннюю кэш-память. Когда CD=1 промахи в кэш-памяти не
вызывают заполнения ее строки. Отметим, что попадания в кэш-памяти не
запрещаются; для полного запрещения кэш-памяти ее необходимо очистить.

29 бит
BW (Not Write-through) - несквозная запись. Этот бит в состоянии 0 разрешает
сквозную запись и циклы недостоверности кэш-памяти, а в состоянии 1 запрещает
циклы недостоверности кэш-памяти и сквозные записи, вызвавшие попадания в 
кэш-памяти. Запрещение сквозной записи может привести к появлению в кэш-памяти
устаревших данных.

						(c) by Reminder [DVC]

