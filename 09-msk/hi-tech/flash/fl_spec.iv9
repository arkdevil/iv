▄▄                   ▄
▀▀▀ STEALTH GROUP WW █ Mail:   BOX 15, 125080 MOSCOW   ████████ █████████ █▀▀█
▀██ ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ █ ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀▀▐▀▀▀   ┌─┐┬ ┬┌─┤┬ ┬ ╥ ┬┐┌ █▄▄█
 ▐█ █▀▄ █▀▀ ▄▀▀ ▄▀▀ ▄█▄ ▄▀▀ █▀█   ▌ █ ▄▀█ █ ▄▀▀ █▄▄    ├┬┘│ │└─┐├─┤   │└┤ ▄  █
  █ █ █ █▀  █▀  █    █  █▀  █ █   █ █ █ █ █ █   █      ┴└─└─┘└─┘┴ ┴   ┴ ┴ ▀▀▀▀
  █ ▐ ▐ ▐   ▐▄▄ ▐▄▄  ▐  ▐▄▄ ▐▄▀    ▀█ ▀▄█ ▐ ▐▄▄ ▐▄▄▄   ████  WINTER ' 96  ████
  ▐ ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄   ███████████████████████

    █████████████ СПЕЦИФИКАЦИЯ AMI FLASH BIOS ██████████████ 

   Перед вами спецификация AMI Flash BIOS. Большая часть этого - всякая
   техническая дрянь, самое важное - прерывания. (Функция 0E0h int16h)
   Очень трудно было найти этот документ среди нескольких сотен текстовых
   файлов на ftp серверах AMI with some obscure name.
   Даже если это кому-то и доводилось видеть это раньше, скорее всего,
   не были вирмэйкерами. Вы не найдете эту информацию больше нигде. Даже
   Ralph Brown этого не имеет.
   
   Я не слишком разбираюсь, как работает напряжение, но мне повезло и
   удалось выкопать информацию, о которой очень мало упоминалось.

   Я удивлюсь, если вы спалите чип, программно повышая ему напряжение.
   BwaHaHAhaHaha  :)  nah that would be wrong :)

   Предлагаю обратиться к нижеприведенному тексту и поискать в нем интересные 
   места.

------------------------------


AMIFLASH - Flash Implementation Guide                   1992-1994  

American Megatrends, Inc.  All Rights Reserved.

Page 0 of 20

American Megatrends, Inc.



AMIFLASH

Руководство по Flash.

Summary

Этот документ является руководством по обеспечению Flash в ISA, EISA,
PS/2 совместимых motherboard и описывает AMIFLASH, утилиту программирования
Flash, совместимую с AMIBIOS, датированными 080893 или  позже для HiFlex BIOS
и датированными 111593 или позже для WinBIOS.


Издание 2.0.				10 января 1994 года

Copyright 1992-1994  American Megatrends, Inc.


	[Сраные копирайты...]

	[Еще более сраные тексты о правах AMI]


For additional information
Call American Megatrends BIOS Sales Department at 1-800-828-9264 for
additional information about AMIFLASH.

	[Сраный дисклеймер]

	[Гарантийные замечания]

	[Трэйдмарки]

	[История изданий]



0.0  ВСТУПЛЕНИЕ

Этот документ описывает программные (BIOS и утилиты) и аппаратные детали
flash EPROM implementation на motherboard.

Утилита программирования Flash нужна для программного изменения flash EPROM
с целью дать пользователю возможность изменять BIOS по мере выхода новых 
версий без излишних трудностей (таких как открывание системного блока, :) 
вытаскивания EPROM, его перепрограммирования на программаторах и т.д.)

Утилита программирования Flash уникальна для каждого исполнения аппаратной
части. Может возникнуть ситуация, когда пользователь получит другую утилиту
программирования flash отдельно для каждого аппаратного исполнения.
Для пользователя будет весьма трудно контролировать так много утилит, которые
по сути делают тоже самое, но определенная утилита будет работать только для
определенной motherboard.

Приведем немногие из факторов, делающие утилиту программирования flash зави-
симой от конфигурации "железа":

Метод повышения/понижения напряжения зависит от "железа".

Метод установки flash в режим записи зависит от "железа".

Метод отключения shadow RAM зависит от "железа".

Метод отключения cache зависит от "железа".

Метод генерации аппаратного reset может зависеть от "железа".

В случае нефатальной ошибки (к примеру flash отсутствует и т.д.), утилита
программирования flash должна иметь возможность возвратить все в оригинальное
рабочее состояние. Для этого требуется сохранить необходимую системную инфо
перед тем, как начать доступ к Flash. Эта инфо включает в себя текущий статус
shadow, статус cache, статус power management и др. и зависит от "железа".
 

0.1  ОБОБЩЕНИЕ УТИЛИТ ПРОГРАММИРОВАНИЯ FLASH

Эта спецификация обобщает все утилиты программирования flash так, чтобы 
они могли работать на всех платформах.

Такое обобщение требует некоторого интерфейса между BIOS и flash утилитой.
Нижеприведенное описывает спецификации AMIBIOS, которые должны быть приложены
для создания одной утилиты на все motherboards.

Различные требования для программирования flash реализованы в AMIBIOS 
с помощью функции 0E0h int16h.

Часть-1 данного документа содержит функциональную спецификацию функций прог-
раммирования flash, которые применены в AMIBIOS и Часть-2 содержит образец
аппаратной реализации схемы flash.

0.2  РАЗЛИЧНЫЕ ТИПЫ FLASH EPROM И ТРЕБОВАНИЯ К АППАРАТНОМУ ОБЕСПЕЧЕНИЮ

Flash EPROMs бывают двух типов, а именно: 

      Normal flash (non-sectored) e.g. Intel 28010.
      Нормальный flash (не разделенный на сектора)

  Sectored flash e.g. Intel 28F001BX-T 
  (Flash, разделенный на сектора, известен как boot-block flash.)


Данный документ и примеры составлены с использованием обеих типов flash.

0.2.0 ОБЫЧНЫЙ (НЕ РАЗДЕЛЕННЫЙ НА СЕКТОРА) FLASH - Intel 28F010

В основном это повторение стандартного EPROM с добавленной возможностью
программного изменения flash EPROM без снятия его с motherboard. 
 Требования к аппаратному обеспечению этого типа flash:

Метод повышения Vpp (напряжения программирования) до 12.0V и понижения его
обратно до нормального уровня.

Метод установки flash в режим записи и обратно в режим только-для-чтения.

(см.Часть-2 для аппаратного способа)

Главный недостаток этого типа flash - это ошибки (изменения напряжения и
т.д.) во время перепрограммирования flash; в таком случае чип необходимо
вынуть из motherboard и перепрограммировать на программаторе с помощью
программиста EPROM.

0.2.1  SECTORED FLASH - Intel 28F001BX-T   (FLASH, поделенный на сектора)

Измененный EPROM с добавленной возможностью перепрограммирования без вынимания
из motherboard. Вдобавок ко всему, этот flash имеет возможность аппаратной
защиты одного блока flash от случайного стирания. Данный тип flash основан
на блочной архитектуре и состоит из нескольких блоков.

Intel 28F001BX-T состоит из 4-х отдельных блоков, одного аппаратно защищенного
8-ми килобайтного блока загрузки (boot block), двух 4-х килобайтных блоков
параметров и одного 112Kb блока кода. 
Boot block обычно содержит код восстановления (так называемый boot block 
code), в то время, как остальные три блока содержат основной BIOS и другие 
параметры. Это позволяет изменять другие три блока с помощью кода восстановле-
ния даже в случае ошибки напряжения во время записи flash с помощью утилиты
программирования flash. Конечно, утилита программирования не может 
программировать boot block (thereby не может уничтожить код восстановления),
потому что boot-block защищен от случайной записи/стирания.


Основное функциональное назначение кода восстановления заключается в следу-
ющем: после включения питания код восстановления получает управление. Этот код
проверяет целостность основного кода BIOS и если основной BIOS найден нор-
мальным, код восстановления передает управление основному BIOS. В противном
the control to the main BIOS. If main BIOS is found to bad, then this
случае код восстановления считывает с дискеты A: файл BIOS update ROM и
стирает остальные три блока flash EPROM, программирует остальные три блока
flash EPROM с дискеты и делает Reset.

Важно заметить, что при включении питания код восстановления виден в сегменте
F, а именно в адресах FE000-FFFFF. Но когда код восстановления передает
управление основному BIOS, основной BIOS должен быть расположен по адресам
F0000-FFFFF. Это требует наличие механизма инверсии адресов, посредством
которого код восстановления сможет инвертировать A16 перед передачей управле-
ния основному BIOS.

At power-on, the mapping of physical flash eprom space to the system address
space is shown in Fig. 1 
(See Page 6).

During runtime i.e. after recovery code transfers control to main BIOS, the
mapping of physical flash eprom space to the system address space is shown
in Fig. 2 
(See Page 6)

Понятно, что инверсия адресной линии A16 необходима в процессе выполнения
(перед тем, как код восстановления передаст управление основному BIOS) для
того, чтобы код основного BIOS прсматривался по адресам F0000-FFFFF.

Аппаратные требования к данному типу flash:

Метод повышения Vpp(напряжения программирования) до 12.0V и понижения его
обратно.

Метод перевода flash в режим записи и в режим только_для_чтения.

Метод инвертирования адресной линии A16.

Аппаратная защита блока загрузки (boot block'а).

Аппаратные установки описаны в Часть-2.


ЧАСТЬ - 1

СПЕЦИФИКАЦИЯ ФУНКЦИЙ ПРОГРАММИРОВАНИЯ FLASH BIOS В AMIBIOS

1.0  ФУНКЦИИ ПРОГРАММИРОВАНИЯ FLASH, ВСТРОЕННЫЕ В INT 16H

За программирование flash в AMIBIOS отвечает функция #0Eh INT 16h.


Основная спецификация:

На входе:

	    AH      E0h

	    AL      подфункция

	    Другие входные параметры см. в спецификации подфункций.

На выходе:

		CY      Error

		NC      Success

		AL      FAh

	    Другие входные параметры см. в спецификации подфункций.

Для уверенности в успешном выполнении функций необходимо всегда проверять
AL = 0FAh на выходе. При возврате AL всегда равен 0FAh

Описание подфункций.

Подфункция#         Описание



00h                 Получит номер версии интерфейса BIOS-FLASH 

01h                 Получить требования к сохранению статуса чипа

02h                 Сохранить статус чипа и подготовить чип

03h                 Восстановить статус чипа

04h                 Понизить напряжение Vpp

05h                 Повысить напряжение Vpp

06h                 Установить read-only для Flash

07h                 Разрешить запись во Flash

08h                 Выбрать Flash 

09h                 Отменить выбранный Flash

0Ah                 Верификация доступа к адресам памяти 

0Bh                 Сохранить Internal Cache Status

0Ch                 Восстановить Internal Cache Status

0Dh-FEh             ЗАРЕЗЕРВИРОВАНО для будушего использования

FFh                 Сгенерировать CPU Reset


1.0.0  ПОЛУЧИТЬ НОМЕР ВЕРСИИ ИНТЕРФЕЙСА BIOS-FLASH - Подфункция# 00h


Возвращает номер версии интерфейса BIOS-Flash в BCD-формате в регистр BX. 
К примеру, версия 2.00 возвратит в BX число 0200h.

Эту функцию можно использовать для детектирования наличия интерфейса 
BOIS-Flash. При возврате регистр AL должен обязательно быть равен 0FAh.

Вход:

	    AH      E0h
	    AL      00h

Выход:

		CY      Интерфейс BIOS-Flash отсутствует

		NC      Интерфейс BIOS-Flash присутствует

		AL      FAh

		BX      Номер версии в формате BCD



Изменяются регистры:     AX  BX


Данная версия интерфейса должна возвратить 0200h (то есть версия 2.00)


1.0.1  ПОЛУЧИТЬ ТРЕБОВАНИЯ К СОХРАНЕНИЮ СТАТУСА ЧИПА Подфункция# 01h

Возвращает размер в байтах, необходимый для сохранения текущего статуса чипа

Вход :

	    AH      E0h

	    AL      01h



Выход:

		CY      Error

		NC      OK

		AL      FAh

		BX      # байт, необходимых для сохранения текущего статуса чипа



Register destroyed:     AX  BX


1.0.2  SAVE CHIPSET STATUS AND PREPARE CHIPSET - Subfunction# 02h



Данная процедура сохраняет текущий статус чипа в обозначенной области данных
и подготавливает чип к разрешению доступа в EPROM.

Необходимо сохранить текущий статус cache, статус power management'а, статус
shadow и т.д. 
Т.о., при нефатальной ошибке будет возможно вернуть эти значения.
Подготовка чипа к работе с flash EPROM включает в себя отключение shadow ram,
внешнего cache, внутреннего cache, power management'а и т.д. 
Необходимо сохранить эти значения перед началом операции.
Отключение cache позволит с полной уверенностью обращаться напрямую в адресное
пространство ROM, не беспокоясь о том, что cache может нам помешать.
Если нужное адресное пространство ROM кэшируется только при "shadow enabled",
(т.е. кэшируется только shadow ram, а не rom), отмена кэширования происходит
при отмене shadow ram и, в данном случае, отмены кэширования не требуется.
Если ROM кэшируется, то cache необходимо отключить. Данная функция должна
отключить внутренний cache.

Вход :

	    AH      E0h

	    AL      02h

	    ES:DI   указатель на буффер для сохранения статуса чипа

Выход:

		CY      Error

		NC      ОК

		AL      FAh


Изменяемые регистры: AX


1.0.3  ВОССТАНОВИТЬ СТАТУС ЧИПА - Подфункция# 03h


Данная функция восстанавливает статус чипа из области памяти, в которую
он был сохранен подфункцией 02.

Вход :

	    AH      E0h

	    AL      03h

	    ES:DI   указатель на буффер, где хранится статус чипа, который
		    необходимо восстановить

Выход:

		CY      Error

		NC      ОК

		AL      FAh



Изменяется регистр:     AX


1.0.4  ПОНИЗИТЬ НАПРЯЖЕНИЕ ПРОГРАММИРОВАНИЯ (Vpp) - подфункция# 04h

Понижает Vpp до нормального уровня.
Процедуре необходимо подождать, пока уровень напряжения стабилизируется.

Вход :

	    AH      E0h

	    AL      04h


Выход:

		CY      Error

		NC      ОК

		AL      FAh



Изменяется регистр:      AX


1.0.5  ПОВЫСИТЬ Vpp - подфункция# 05h

Повышает Vpp до уровня, необходимого для программирования. ( 12V для 12-
вольтовых flash EPROM ). 
Процедуре необходимо подождать, пока уровень напряжения стабилизируется.


Вход :

	    AH      E0h

	    AL      05h



Выход:

	    CY      Error

	    NC      Successful

	    AL      FAh



Изменяется регистр:      AX



1.0.6  ЗАЩИТА FLASH ОТ ЗАПИСИ - подфункция# 06h

Делает flash защищенным от записи. Необходима задержка для стабилизации.

Вход :

	    AH      E0h

	    AL      06h

Output:

		CY      Error

		NC      Successful

		AL      FAh


Register destroyed:      AX


1.0.7  FLASH WRITE ENABLE - Subfunction# 07h


This routine makes the flash write-enabled. This routine must provide any
delay (if required) for stabilization.

Вход :

	    AH      E0h

	    AL      07h

Выход:

		CY      Error

		NC      O.K.

		AL      FAh

Измененные регистры:      AX


1.0.8  ВЫБРАТЬ FLASH - подфункция# 08h

Выбирает flash. Обычно эта функция не нужна. Однако, если на матерной 
плате имеются и нормальный, и flash EPROM, - необходимо ее выполнить
Данная функция при необходимости может обеспечить задержку для стабилизации.
Если функция не нужна, она все равно возвращает O.K.


Вход :

	    AH      E0h

	    AL      08h


Выход:

		CY      Error

		NC      O.K.

		AL      FAh


Измененные регистры:     AX


1.0.9  ОТМЕНИТЬ ВЫБРАННЫЙ FLASH - подфункция# 09h


Отменяет выбор flash. См. подфункцию 08h 

Вход :

	    AH      E0h

	    AL      09h


Выход:

		CY      Error

		NC      O.K.

		AL      FAh


Измененные регистры:     AX


1.0.10  ВЕРИФИКАЦИЯ ДОСТУПА К АДРЕСАМ ПАМЯТИ - подфункция# 0Ah

Верифицирует доступность указанной памяти. Необходима в ситуации, если неко-
торые участки памяти недоступны вследствие отключения cache (80000-9FFFF 
может быть недоступна) и т.п. Если в данной функции нет необходимости,
возвращается О.К.

Вход :

	    AH      E0h

	    AL      0Ah

	    ES      сегмент памяти для верификации

	    BX      количество требуемых параграфов памяти


Выход:

		CY      Error

		NC      O.K.

		AL      FAh


Измененные регистры:      AX

В случае ошибки BX будет = 00


1.0.11 СОХРАНИТЬ INTERNAL CACHE STATUS - подфункция# 0Bh

Сохраняет текущий статус внутреннего кэша. Перед сохранением необходима 
проверка на доступность внешнего кэша для конкретного железа. 
Буфер для сохранения должен быть не менее 16 байт.

В случае отсутствия внутреннего кэша выдается ошибка.

Вход :

	    AH      E0h

	    AL      0Bh

	    ES:DI   Указатель на буффер для сохранения

Выход:

		CY      Error

		NC      O.K.

		AL      FAh

Измененные регистры:      AX

1.0.12  ВОССТАНОВИТЬ INTERNAL CACHE STATUS - подфункция# 0Ch

Восстанавливает статус внутреннего кэша, сохраненный подфункцией# 0Bh
Вызывает ошибку в Защищенном Режиме.

Вход :

	    AH      E0h

	    AL      0Ch

	    ES:DI   Указатель на буффер


Выход:

		CY      Error

		NC      O.K.

		AL      FAh


Измененные регистры:      AX


1.0.13  СГЕНЕРИРОВАТЬ CPU RESET - подфункция# FFh


Перезагружает компьютер.

Вход :

	    AH      E0h

	    AL      FFh

Выход:

		нет выхода


1.1  ЗАМЕЧАНИЯ

В некоторых компьютерах функции "Повысить Vpp" и "Понизить Vpp" совпадают
с функциями "Разрешить запись в flash" и "сделать flash только_для_чтения"
соответственно.


ЧАСТЬ - 2


АППАРАТНОЕ ОБЕСПЕЧЕНИЕ FLASH


[опущено при переводе. см. "VLAD"]

