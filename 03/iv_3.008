█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█  ▀					    ▀	       ███▀▀███
█ STEALTH group	█░ █ █▀▄ █▀▀ ▄▀▀ ▄▀▀ ▀█▀ ▄▀▀ █▀█    ▌ █ ▄▀█ █ ▄▀▀ ▄▀▀  ████▀▄██
█   presents	█░ █ █ █ █▀  █▀  █    █  █▀  █ █    █ █ █ █ █ █  ▀█▀▀  █████ ██
█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█░ ▐ ▐ ▐ ▐   ▐▄▄ ▐▄▄  ▐  ▐▄▄ ▐▄▀     ▀█ ▀▄█ ▐ ▐▄▄ ▐▄▄  ███▄▄███
 ░░░░░░░░░░░░░░░░░                                                     DEC 1994

								
	Формат Виндовского EXEшника. Windows !  Как много в этом слове ... !
  Обойдусь без длинных предисловий, потому как наш журнал доступен не только
  мужскому глазу. Конечно, единственное многоточие в этих фразах вряд ли 
  вместит все, что я думаю о предмете разговора, но, публикуя эти строки, я
  надеюсь, что вы сможете достойно воплотить в жизнь все многообразие моего
  многоточия. Материал выдран из какого-то КомпьютерПресса.
	"Стучите, и откроют вам (окна)". 
			          LoWINgod. 
-------------------------------------------------------------------------------

       В исполняемом файле Windows могут содержаться в различных комбинациях 
  код, данные и ресурсы. Ресурсы -это BIN данные для прикладных программ.
  Учитывая возможность запуска в DOS, формат должен распознаваться как DOS, 
  так и Windows.
       Первый заголовок (cтарый)- распознается DOS как программа, выводящая
  на экран  "This program requires Microsoft Windows" 
       Второй заголовок (новый )- виндовский.

  Старый заголовок - состоит из 4х частей:
	- обычный EXEшный заголовок
	- зарезервированная часть 
	- указатель на новый заголовок
	  (если в ЕХЕ-header'е по 18h (начало таблицы перемещаемых элементов)
  	  стоит смещение  40h или больше, то слово, расположенное по 3Сh, со-
          держит смещение начала нового заголовка )
	- DOS программа
 
----------------------------Формат WINDOWS EXE--------------------------------
00Н   DOS header
20Н   резерв
30Н   смещение начала нового заголовка
40Н   DOS программа(Winstub) 
...
Начало нового заголовка		ИнфоБлок
				Таб.сегментов		
				Таб.ресурсов
				Таб.резидентных имен
				Таб.ссылок на модули
				Таб.импортируемых имен
				Таб.входов
				Таб.нерезидентных имен
				Сегменты кода и данных
Конец файла
-------------------------------------------------------------------------------
						

	В заголовке нового стиля содержится вся инфо, необходимая для сегменти-
рованного исполняемого файла - заголовки таблицы сегментов, ресурсов и имен. 

Смещ.(hex)------------------------------------------------------------------
00		сигнатура:  lo=4E 'N' hi= 45 'E'
02		версия редактора связей
03		номер последнего уточнения версии редактора связей
04 		смещение таблицы входов (относительно начала заголовка)
06		длина таблицы входов в байтах
08		зарезервировано:  32битная контрольная сумма
0С		набор флагов: (16 бит)  (" ^ " означает УСТАНОВЛЕН)
	0	^ -формат файла SINGLEDATA, в нем содержится только один
		сегмент данных. Если файл является .DLL, бит устанавливается
		редактором связей			
 	1	^ - MULTIPLEDATA формат - в файле содержится несколько сег-
		ментов данных. Независимо от этого формат файла NOAUTODATA и 
		в нем нет автосегментов данных
	2	Reserved
	3	^ - файл может быть загружен только в Защищенном Режиме
	8	^ - содержится код, не совместимый с библиотеками MSWindows
		    для OS/2
	9	^ - код, совместимый с библиотеками MS Windows
	11 	^ - в первом сегменте содержится код, загружающий прикладную 
		    программу
	13	^ - файл был создан, несмотря на обнаруженные редактором связи
  		ошибки
	14	^ - исполняемый файл размещается в EMS
	15	^ - библиотечный модуль.  При загрузке библиотеки CS:IP указы-
		вает на процедуру инициализации, а AX равен определителю модуля.
0E		число автосегментов данных: SINGLEDATA=0, MULTIPLEDATA=не указы-
		вается.
10		начальный размер в байтах локальной кучи, 0 при отсутствии
12		начальный размер стека в байтах. =0, если SS!=DS как в библиотеках
14		CS:IP
18		SS:SP
1C		число входов в таблице сегментов
1Е		число входов в таблице ссылок на модули
20		число байт в таблице нерезидентного имени
22		относительное смещение начала таблицы 
			      сегментов относительно начала заголовка
24		              ресурсов относительно начала заголовка	
26	                      резидентного имени   ---""---
28			      ссылок на модули     ---""---	 
2А			      импортируемых имен   ---""---
2С		 	      нерезидентных имен   ---""---
30		число перемещаемых точек входа
32		множитель смещений, использующийся при размещении логических 
		секторов, выражается степенью логарифма по основанию 2 , 
		по умолчанию=9 (512)	
34		число ресурсных сегментов
36 	бит	флаги, определяющие рабочую OS -
	0	неизвестная
	1	Microsoft OS/2
	2	Microsoft Windows
	3	reserved	
	4	reserved
37	бит 	доп.флаги
	1	программа для Windows 2.x и может быть запущена в Защищенном
		режиме версии 3.х 
	2	программа для 2.х и может использовать пропорциональные шрифты
	3	в файле содержится область быстрой загрузки
38		указатель начала области быстрой загрузки (используется только 
		Windows)
3A		длина области быстрой загрузки (используется только Windows)
3C		Reserved
3E		версия Windows (используется только Windows)	          
--------------------------------------------------------------------------

   Сразу за заголовком находится таблица сегментов. (см.ниже) В ней содержится
   инфо, описывающая каждый сегмент исполняемого файла.

Смещ(hex)
0		смещение логического сектора в байтах к сегменту данных относи-
		тельно начала файла.  0=отсутствие сегмента данных
2		Длина сегмента в файле.  0= 64кб, если сещение также не 0
4	бит	флаги
	0	^ - сегмент данных, иначе cегмент кода
	1	^ - в загрузчике имеется память, отведенная для сегмента
	2	^ - сегмент загружен
	3	reserved
	4	^ - MOVEABLE сегмент, иначе - FIXED
	5	^ - сегмент PURE или SHAREABLE,
		    иначе - IМPURE или NONSHAREABLE
	6	^ - PRELOAD сегмент, иначе - LOADONCALL
	7	^ - для сегмента кода: EXECUTEONLY
		    для сегмента дата: READONLY
	8	^ - в сегменте содержатся перемещаемые данные
	9	^ - подстраивающийся сегмент
	10,11	Reserved
	12	^ - сбрасываемый (discardable) сегмент
	13,14,15  Reserved
6		мин. обьем в байтах, необходимый для размещения сегмента
		0= 64кб		

------------------------------------------------------------------------------
	Далее идет таблица ресурсов. Ресурсами являются все основные обьекты 
интерфейса - диалоговые окна, меню, курсоры,растровые изображения, значки, 
шрифты и т.д. 
        Формат таблицы ресурсов (смещения относительно начала входа каждого
ресурса)
        Значения в диапазоне смещений 2-12h повторяются в таблице до тех пор,
пока величина по смещению 2н не станет равной 0.
        Значения в диапазоне от 0Ah до 12h, повторяются столько раз, сколько 
указано по адресу 4h.

смещ.(hex)
0		Единица смещения данных ресурса
2		Тип ресурса. Если установлен старший бит, то это один из 
		следующих типов ресурсов,описанных в Windows.h, иначе это 
		смещение относительно начала таблицы ресурсов строки, указы-
		вающей  тип ресурса.
		Тип ресурса 0 указывает на конец записей ресурсов.
4		число ресурсов данного типа
6		reserved
А		смещение данных ресурса относительно начала файла в единицах, 
		указанных в начале таблицы ресурсов
С		длина ресурса в байтах
Е	бит	набор флагов	
	4	MOVEABLE 	
	5	PURE возможность совместного использования
	6	PRELOAD предварительно загружаемый
10		Определяет (если старший бит=1) или указывает на ID ресурса-
		смещение относительно начала таблицы ресурсов.
12		reserved
16		длина или имя типа . 0 находится в конце таблицы ресурсов.
17		определяет тип ресурса или текст имени. В имени различаются
		кейсы.
-----------------------------------------------------------------------------

	Далее таблица резидентных имен, в которой содержатся строки, иденти-
фицирующие экспортируемые функции исполняемого файла. Постоянно сидят в памяти
и никогда не сбрасываются на диск. Верхний и нижний регистры различаются 
(uppercase/lowercase), 0 в конце отсутствует.

0		Длина строки. =0, если в таблице нет дополнительных строк
ххх		строка резидентного имени
		(первая строка-имя модуля)
+1		Порядковый номер, идентифицирующий строку. Может использовать-
		ся в качестве индексного выхода в таблицу
------------------------------------------------------------------------------
       Далее следует таблица ссылок на модули. Содержится список смещений имен 
 модулей, хранящихся в таблице импортируемых имен. Каждый вход в таблице есть 
 двухбайтовое последовательное число.
--------------------------------------------------------------------------------
       Таблица импортируемых имен, в ней записаны имена модулей, импортируемых
 в исполняемый файл. Каждый вход состоит из 2 частей - байт длины строки и
 строка.
-------------------------------------------------------------------------------
       Таблица входов. В ней содержатся группы точек входа в исполняемый файл. 
Эти группы создаются редактором связей и последовательно пронумерованы, 
начиная  с 1.
Каждая группа начинается с двухбайтного заголовка:  число входов в группе
(0= конец таблицы),  и доп. информация о сегменте - FFh: перемещаемый, 
FEh- вход относитися к константе, определенной внутри модуля, иначе-вход
является индексом сегмента. Для перемещаемых сегментов - каждый вход состоит 
из 6 байт, а для фиксированных -из 3х.

		Таблица входов перемещаемого сегмента.
0	бит	
	0	экспортируемый вход
	1	сегмент совместно использует глобальный сегмент данных
	3-7	если в EXE файле содержится код, выполняющий кольцевые 
		переходы, то это - число слов, составляющих стек. Во время
		кольцевых переходов эти слова должны копироваться из одного 
		кольца в другое.
1		Инструкция INT 3Fh
3		Номер сегмента
4		Смещение сегмента
--------------------------------------
		Таблица входов фиксированного сегмента.
0	бит 0	the same (те саме /укр./)
	1	the same (только для библиотечных модулей singledata)
	3-7     the same
1		смещение
-----------------------------------------------------------------------------
     Таблица нерезидентных имен. Содержит имена экспортируемых функций, содер-
жащихся в исполняемом файле. Эти имена не весгда остаются резидентными в памя-
ти. Структура полностью совпадает со структурой таблицы резидентных имен.
 
	Далее следуют сегменты кода и данных. Если в сегменте кода соджержатся
вызовы функций, определенных в других сегментах, то для таких вызовов необхо-
димо использовать таблицы перемещений. Они располагаются непосредственно за 
кодом или данными в сегменте. В первых двух байтах содержится число элементов 
таблицы.
 Таблица: - тип адресации(только сегмент, только смещение, или и то,и другое.)
	  - тип перемещения( внутренняя ссылка,импортируемый порядковый номер,
	    импортируемое имя)
	  - номер сегмента или порядковый ID (для внутренних ссылок)    
	  - индекс таблицы ссылок или порядковый номер функции
	  - индекс таблицы ссылок или смещение таблицы имен( для импортируемых
	    имен)

					The END. 